// @ts-nocheck
import ErrorResponse from "@/types/errors/ErrorResponse.ts";

const Errors = {
    NotFound: 'not_found',
    InvalidOtp: 'invalid_otp',
    UserNotFound: "user_not_found",
    UnidentifiedError: "unidentified_error",
    EmailNotSent: "email_not_sent",
    SamePasswords: "same_passwords",
    Password_Lowercase_Character: 'password_lowercase_character',
    Password_Uppercase_Character: 'password_uppercase_character',
    Password_Digit: 'password_digit',
    Password_Special_Character: 'password_special_character',
    Password_Length: 'password_length',
    Password_MisMatch: 'password_mismatch',
    Unauthorized: 'unauthorized',
    Forbidden: 'forbidden_access',
    InvalidCredentials: 'invalid_credentials',
    InActiveAccount: 'inactive_account',
    EmailInUse: 'email_in_use',
    UsernameInUse: 'username_in_use',
    FileIsRequired: 'file_is_required',
    MaximumFileSizeExceeded: 'max_file_size_exceeded',
    FileTypeNotAllowed: "file_type_not_allowed",
    FileNameRequired: 'file_name_required',
    FileUploadError: 'file_upload_error',
    AccountLocked: 'account_locked',
    InvalidUsername: "invalid_username",
    RateLimitingReached: "rate_limit_reached",
    FieldNotInSchema: 'field_not_in_schema',
    NotAValidValue: 'not_a_valid_value',
    NotAValidType: 'not_a_valid_type',
    ValueIsRequired: "value_is_required",
    DeleteUnSuccessful: "delete_unsuccessful",
    BetweenOperationParameterMismatch: "between_operation_parameter_mismatch",
    AlreadyInUse: "already_in_use",
    PackageNotAvailable: "package_not_available",
    NotARelatedItem: "not_a_related_item",
    ModelNotRegistered: "model_not_registered",
    SubscriptionAlreadyExists: "subscription_already_exists",
    SubscriptionNotActivated: "subscription_not_activated",
    InvalidChunkFile: "invalid_chunk_file",
    InvalidLicenseKey: "invalid_license_key",
    MicrosoftEntraConnectionFailed: 'microsoft_entra_connection_failed',
    DatabaseConnectionFailed: 'database_connection_failed',
    StorageConnectionFailed: 'storage_connection_failed',
    FieldRequired: "field_required",
    InvalidEmail: "invalid_email",
    UserNotRegisteredWithEmailAndPassword: "user_not_registered_with_email_and_password",
    ProjectNotSetup: "project_not_setup",
    AuthCodeMissing: "auth_code_missing",
    JsonParseError: "json_parse_error",
    NoDataSupplied: "no_data_supplied",
    NotAnAzureUser: "not_an_azure_user",
    NoAzureUsersFound: "no_azure_users_found",
    AzureImageNotFound: "azure_image_not_found",
    AzureUserAlreadyExistsInSystem: "azure_user_already_exists_in_system",
    AccessRemovalUnsuccessful: "access_removal_unsuccessful",
    CannotEditAccess: "cannot_edit_access",
    UnidentifiedFileServiceError: "unidentified_file_service_error",
    FileServiceNotInitialized: "file_service_not_initialized",
    BulkDeleteUnsuccessful: "bulk_delete_unsuccessful",
    DateInPast: "date_in_past",
    ExistingDatabaseConnectionNotFound: "existing_database_connection_not_found",
    DatabaseAlreadyConnected: "database_already_connected",
    FileStorageAlreadyConnection: "file_storage_already_connected",
    FileFetchFailed: "file_fetch_failed",
    DefaultSignatureNotSpecified: "default_signature_not_specified",
    RedisNotConnected: "redis_not_connected",
    RedisKeyValueUpdateFailed: "redis_key_value_update_failed",
    RedisServiceNotInitialized: "redis_service_not_initialized",
    EntraConnectionNotConfigured: "entra_connection_not_configured",
    LicenseKeyVerificationFailed: "license_key_verification_failed",
    NotAValidSubscription: "not_a_valid_subscription",
    UnableToConnectToAdminServer: "unable_to_connect_to_admin_server",
}

const ErrorResponses = {
    [Errors.UnidentifiedError]: new ErrorResponse("unidentified_error", "An unidentified error occurred."),
    [Errors.NotFound]: new ErrorResponse(Errors.NotFound, "{1} not found"),
    [Errors.InvalidOtp]: new ErrorResponse(Errors.InvalidOtp, "Invalid Otp or the Otp has expired"),
    [Errors.UserNotFound]: new ErrorResponse(Errors.UserNotFound, "Invalid Email/Username"),
    [Errors.EmailNotSent]: new ErrorResponse(Errors.EmailNotSent, "Unable to send email as of now. Please try again later"),
    [Errors.SamePasswords]: new ErrorResponse(Errors.SamePasswords, 'Cannot reset the password as both passwords are same'),
    [Errors.Password_Lowercase_Character]: new ErrorResponse(Errors.Password_Lowercase_Character, "At least 1 lowercase letter is required"),
    [Errors.Password_Uppercase_Character]: new ErrorResponse(Errors.Password_Uppercase_Character, "At least 1 uppercase letter is required"),
    [Errors.Password_Digit]: new ErrorResponse(Errors.Password_Digit, "At least 1 digit is required"),
    [Errors.Password_Special_Character]: new ErrorResponse(Errors.Password_Special_Character, "At least 1 special character is required"),
    [Errors.Password_Length]: new ErrorResponse(Errors.Password_Length, "Password must be at least {1} characters long"),
    [Errors.Password_MisMatch]: new ErrorResponse(Errors.Password_MisMatch, "Passwords do not match"),
    [Errors.Unauthorized]: new ErrorResponse(Errors.Unauthorized, 'Unauthorized access'),
    [Errors.Forbidden]: new ErrorResponse(Errors.Forbidden, 'Forbidden access to this resource'),
    [Errors.InvalidCredentials]: new ErrorResponse(Errors.InvalidCredentials, "Invalid credentials"),
    [Errors.InActiveAccount]: new ErrorResponse(Errors.InActiveAccount, 'Account has not yet been activated. Please contact the admin and try again'),
    [Errors.UsernameInUse]: new ErrorResponse(Errors.UsernameInUse, 'Username already in use'),
    [Errors.EmailInUse]: new ErrorResponse(Errors.EmailInUse, 'Email already in use'),
    [Errors.FileIsRequired]: new ErrorResponse(Errors.FileIsRequired, 'File is required'),
    [Errors.MaximumFileSizeExceeded]: new ErrorResponse(Errors.MaximumFileSizeExceeded, `Files of size less than or equal to {1} Mb are allowed`),
    [Errors.FileTypeNotAllowed]: new ErrorResponse(Errors.FileTypeNotAllowed, `Invalid File Type. Files of type {1} are allowed`),
    [Errors.FileNameRequired]: new ErrorResponse(Errors.FileNameRequired, 'File name is required'),
    [Errors.FileUploadError]: new ErrorResponse(Errors.FileUploadError, 'Unable to upload a file. Please try again'),
    [Errors.AccountLocked]: new ErrorResponse(Errors.AccountLocked, 'Maximum attempts for the password has been made. Please try again in {1} minutes'),
    [Errors.InvalidUsername]: new ErrorResponse(Errors.InvalidUsername, 'Username contains invalid characters. Allowed characters are {1}'),
    [Errors.RateLimitingReached]: new ErrorResponse(Errors.RateLimitingReached, 'You have exceeded the maximum number of requests allowed per minute. Please try again later'),
    [Errors.FieldNotInSchema]: new ErrorResponse(Errors.FieldNotInSchema, 'The field {1} does not exists on schema of type {2}'),
    [Errors.NotAValidValue]: new ErrorResponse(Errors.NotAValidValue, "The value {1} is not a valid value for property {2}. Valid values are {3}"),
    [Errors.NotAValidType]: new ErrorResponse(Errors.NotAValidType, 'The value {1} is not of a valid type for property {2}. Valid value would be of type {3}'),
    [Errors.ValueIsRequired]: new ErrorResponse(Errors.ValueIsRequired, 'The property {1} has missing field value while its required'),
    [Errors.DeleteUnSuccessful]: new ErrorResponse(Errors.DeleteUnSuccessful, 'Unable to delete {1}'),
    [Errors.BetweenOperationParameterMismatch]: new ErrorResponse(Errors.BetweenOperationParameterMismatch, 'Between operation requires 2 parameters and {1} were supplied'),
    [Errors.AlreadyInUse]: new ErrorResponse(Errors.AlreadyInUse, `The {1} is already in use. Cannot use again`),
    [Errors.PackageNotAvailable]: new ErrorResponse(Errors.PackageNotAvailable, `The package {1} is not available for subscription`),
    [Errors.NotARelatedItem]: new ErrorResponse(Errors.NotARelatedItem, `The {1} is not related to the {2}`),
    [Errors.ModelNotRegistered]: new ErrorResponse(Errors.ModelNotRegistered, "The model {1} is not registered with the Database Provider"),
    [Errors.SubscriptionAlreadyExists]: new ErrorResponse(Errors.SubscriptionAlreadyExists, 'The subscription for the user {1} already exists'),
    [Errors.InvalidChunkFile]: new ErrorResponse(Errors.InvalidChunkFile, 'The chunks file is not present in the request'),
    [Errors.InvalidLicenseKey]: new ErrorResponse(Errors.InvalidLicenseKey, 'Invalid License key. Either the subscription has expired or the license key is invalid'),
    [Errors.MicrosoftEntraConnectionFailed]: new ErrorResponse(Errors.MicrosoftEntraConnectionFailed, "Unable to authenticate with Microsoft Entra. Faced following error {1}"),
    [Errors.DatabaseConnectionFailed]: new ErrorResponse(Errors.DatabaseConnectionFailed, "Connection to the database {1} with username {2} on server {3} has failed"),
    [Errors.StorageConnectionFailed]: new ErrorResponse(Errors.StorageConnectionFailed, "Connection to the {1} storage has failed"),
    [Errors.FieldRequired]: new ErrorResponse(Errors.FieldRequired, 'The field {1} is required'),
    [Errors.InvalidEmail]: new ErrorResponse(Errors.InvalidEmail, "The email must be of type example@gmail.com"),
    [Errors.UserNotRegisteredWithEmailAndPassword]: new ErrorResponse(Errors.UserNotRegisteredWithEmailAndPassword, "User is registered with an authentication method other than email/username and password"),
    [Errors.ProjectNotSetup]: new ErrorResponse(Errors.ProjectNotSetup, "The website has not yet been setup. Cannot proceed forward"),
    [Errors.AuthCodeMissing]: new ErrorResponse(Errors.AuthCodeMissing, 'The Authorization code is missing from oAuth'),
    [Errors.JsonParseError]: new ErrorResponse(Errors.JsonParseError, `Unable to parse json object. Faced following error {1}`),
    [Errors.NoDataSupplied]: new ErrorResponse(Errors.NoDataSupplied, 'No data supplied to the route.'),
    [Errors.NotAnAzureUser]: new ErrorResponse(Errors.NotAnAzureUser, "Not an azure user. Cannot proceed forward"),
    [Errors.NoAzureUsersFound]: new ErrorResponse(Errors.NoAzureUsersFound, "No azure user found for the given azure connection"),
    [Errors.AzureImageNotFound]: new ErrorResponse(Errors.AzureImageNotFound, "Azure image not found for the user"),
    [Errors.AzureUserAlreadyExistsInSystem]: new ErrorResponse(Errors.AzureUserAlreadyExistsInSystem, "An azure user with id {1} already exists in the system. Cannot add the user again"),
    [Errors.AccessRemovalUnsuccessful]: new ErrorResponse(Errors.AccessRemovalUnsuccessful, "Unable to remove access of a user {1}"),
    [Errors.CannotEditAccess]: new ErrorResponse(Errors.CannotEditAccess, "Cannot edit access of the user"),
    [Errors.UnidentifiedFileServiceError]: new ErrorResponse(Errors.UnidentifiedFileServiceError, "An unidentified error has occurred in the file service with message {1}"),
    [Errors.FileServiceNotInitialized]: new ErrorResponse(Errors.FileServiceNotInitialized, "File service has not yet been initialized"),
    [Errors.BulkDeleteUnsuccessful]: new ErrorResponse(Errors.BulkDeleteUnsuccessful, "Bulk delete is unsuccessful. Unable to delete some items"),
    [Errors.DateInPast]: new ErrorResponse(Errors.DateInPast, "Cannot specify a date in past for {1}"),
    [Errors.ExistingDatabaseConnectionNotFound]: new ErrorResponse(Errors.ExistingDatabaseConnectionNotFound, "No existing database connection exists. Cannot proceed with {1}"),
    [Errors.DatabaseAlreadyConnected]: new ErrorResponse(Errors.DatabaseAlreadyConnected, 'Database is already connected to the system. Cannot connect again'),
    [Errors.FileStorageAlreadyConnection]: new ErrorResponse(Errors.FileStorageAlreadyConnection, "File Storage {1} has already been connected to the system"),
    [Errors.FileFetchFailed]: new ErrorResponse(Errors.FileFetchFailed, "Unable to fetch file {1}"),
    [Errors.DefaultSignatureNotSpecified]: new ErrorResponse(Errors.DefaultSignatureNotSpecified, "Default signature is not specified for your account"),
    [Errors.RedisNotConnected]: new ErrorResponse(Errors.RedisNotConnected, "No active redis connection exists."),
    [Errors.RedisKeyValueUpdateFailed]: new ErrorResponse(Errors.RedisKeyValueUpdateFailed, "Unable to update the key value pair in redis for the key {1}"),
    [Errors.RedisServiceNotInitialized]: new ErrorResponse(Errors.RedisServiceNotInitialized, "Redis service has not yet been initialized"),
    [Errors.SubscriptionNotActivated]: new ErrorResponse(Errors.SubscriptionNotActivated, "Your subscription is not activated. Please contact the admin to activate your subscription"),
    [Errors.EntraConnectionNotConfigured]: new ErrorResponse(Errors.EntraConnectionNotConfigured, 'Entra connection has not yet been configured'),
    [Errors.NotAValidSubscription]: new ErrorResponse(Errors.NotAValidSubscription, 'The subscription has either expired, cancelled or exceeded the maximum number of available users'),
    [Errors.UnableToConnectToAdminServer]: new ErrorResponse(Errors.UnableToConnectToAdminServer, "Unable to connect to the admin server. Please try again later")
}


export {
    Errors,
    ErrorResponses
};